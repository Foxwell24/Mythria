buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "1.2.3"
}

repositories {
    jcenter()
    maven {
        url  "https://jitpack.io"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "${mod_version}"
group = "com.Jonathon594.Mythria" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Mythria"

minecraft {
    version = "1.12.2-14.23.0.2515"
    runDir = "run"

    replace "@VERSION@", project.version
    replaceIn "Mythria.java"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

jar {
    classifier = 'slim'
}

shadowJar {
    classifier = ''

    relocate "com.mashape.unirest", "me.Jonathon594.Mythria.repack.com.mashape.unirest"
    relocate "com.neovisionaries.ws.client", "me.Jonathon594.Mythria.repack.com.neovisionaries.ws.client"
    relocate "com.sun.jna", "me.Jonathon594.Mythria.repack.com.sun.jna"
    relocate "com.vdurmont.emoji", "me.Jonathon594.Mythria.repack.com.vdurmont.emoji"
    relocate "javax.sound", "me.Jonathon594.Mythria.repack.javax.sound"
    relocate "javazoom", "me.Jonathon594.Mythria.repack.javazoom"
    relocate "net.dv8tion.jda", "me.Jonathon594.Mythria.repack.net.dv8tion.jda"
    relocate "net.sourceforge.jaad", "me.Jonathon594.Mythria.repack.net.sourceforge.jaad"
    relocate "org.apache.commons.codec", "me.Jonathon594.Mythria.repack.org.apache.commons.codec"
    relocate "org.apache.commons.collections4", "me.Jonathon594.Mythria.repack.org.apache.commons.collections4"
    relocate "org.json", "me.Jonathon594.Mythria.repack.org.json"
    relocate "org.kc7bfi.jflac", "me.Jonathon594.Mythria.repack.orgkc7bfi.jflac"
    relocate "org.slf4j", "me.Jonathon594.Mythria.repack.org.slf4j"
    relocate "org.tritonus", "me.Jonathon594.Mythria.repack.org.tritonus"
    relocate "tomp2p.opuswrapper", "me.Jonathon594.Mythria.repack.tomp2p.opuswrapper"

    relocate "org.apache.http", "me.Jonathon594.Mythria.repack.org.apache.http"
    relocate "org.apache.commons.logging", "me.Jonathon594.Mythria.repack.org.apache.commons.logging"
}

reobf {
    shadowJar { mappingType = 'SEARGE' }
}

tasks.build.dependsOn reobfShadowJar

artifacts {
    archives shadowJar
    archives sourceJar
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compile 'net.dv8tion:JDA:3.3.1_280'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
